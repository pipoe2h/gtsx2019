{"status":{},"spec":{"description":"Requirements:\n- IPAM Enabled Network\n- Local User in IoT Portal; Needs improving to support MyNutanix logins","resources":{"client_attrs":{"31fbb160_deployment":{"y":249.2189384532,"x":574.859907136},"b7e77745-b02e-7c4e-71d2-95d44ed0020f":{"y":397.1887244316,"x":591.5661732949},"9fe9a69c-b603-24bb-a4d8-5aaef605eba0":{"y":397.1887244316,"x":591.5661732949}},"service_definition_list":[{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Edge VM Deploy and Register"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"2a7b8303_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"3d8b39d8_runbook","main_task_local_reference":{"kind":"app_task","name":"2a7b8303_dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Edge VM Deploy and Register"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"68784150_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"4e9d977b_runbook","main_task_local_reference":{"kind":"app_task","name":"68784150_dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Edge VM Deploy and Register"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"08b5270b_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"6caf8b00_runbook","main_task_local_reference":{"kind":"app_task","name":"08b5270b_dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Edge VM Deploy and Register"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"502ce5fe_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"061e03c1_runbook","main_task_local_reference":{"kind":"app_task","name":"502ce5fe_dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Edge VM Deploy and Register"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"8c96cd45_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"a2dd57d6_runbook","main_task_local_reference":{"kind":"app_task","name":"8c96cd45_dag"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[],"name":"Edge VM Deploy and Register","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","description":"","name":"iotHeaders","type":"LOCAL","value":"","label":"","attrs":{"type":""}}],"description":""}],"substrate_definition_list":[{"description":"","action_list":[],"type":"AHV_VM","name":"Edge_VM","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":true,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"60","connection_port":22},"editables":{"create_spec":{"resources":{"nic_list":{},"serial_port_list":{},"disk_list":{}}}},"os_type":"Linux","create_spec":{"name":"@@{edgename}@@","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"dff93912-3151-45db-a938-8107d24a3e3e"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":4,"num_sockets":8,"gpu_list":[],"memory_size_mib":16384,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\n\nusers:\n  - name: admin\n    ssh_authorized_keys:\n      - @@{publickey}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"},"type":"","sysprep":null},"power_state":"ON","type":"","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"sherlock-k8s-base-image_403.qcow2","uuid":"1f6b045d-6d0c-4adf-a504-4efa2d1fd23a"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"categories":""},"variable_list":[]}],"credential_definition_list":[{"username":"dave.hocking2@nutanix.com","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"Xi IoT Tenant"},{"username":"admin","description":"","type":"KEY","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"Xi IoT User"}],"package_definition_list":[{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"Edge VM Deploy and Register"}],"name":"Get Edge Serial","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Get Edge Serial"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[{"kind":"app_task","name":"Get Serial Number"},{"kind":"app_task","name":"Register in Xi IoT"},{"kind":"app_task","name":"Edge to Project"},{"kind":"app_task","name":"Install Epoch Docker"}],"name":"198d629d_dag","state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Get Serial Number"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Register in Xi IoT"}},{"from_task_reference":{"kind":"app_task","name":"Register in Xi IoT"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Edge to Project"}},{"from_task_reference":{"kind":"app_task","name":"Edge to Project"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Install Epoch Docker"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Edge VM Deploy and Register"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Get Serial Number","state":"ACTIVE","attrs":{"expected_response_params":[{"status":"SUCCESS","code":200,"type":""}],"request_body":"","headers":[],"url":"http:\/\/@@{address}@@:8080\/v1\/sn","response_paths":{"edgeserial":"*"},"retry_interval":10,"retry_count":10,"tls_verify":false,"content_type":"text\/html","connection_timeout":120,"type":"","method":"GET"},"timeout_secs":"0","type":"HTTP","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Edge VM Deploy and Register"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Register in Xi IoT","state":"ACTIVE","attrs":{"exit_status":[],"script":"# \/usr\/bin\/python3\n'''\nThis section logs into the Xi IoT Portal and captures the Auth token\n'''\nxi_iot_url = 'https:\/\/iot.nutanix.com\/v1.0\/login'\n\nheaders = {'Content-Type': 'application\/json'}\n\nbody = {'email': '@@{Xi IoT Tenant.username}@@',\n        'password': '@@{Xi IoT Tenant.secret}@@'}\n\nresp = urlreq(xi_iot_url, verb='POST', params=json.dumps(body), headers=headers, verify=False)\n\nif resp.ok:\n        token = json.loads(resp.content)['token']\n      \nelse:\n        print(\"Xi IoT Auth call failed\"), json.dumps(json.loads(resp.content), indent=4)\n        exit(1)\n\n'''\nThis section captures the Subnet and Gateway values for the VM\nThis is why the blueprint requires the IPAM service to be configured\n'''\n\n# First we have to get the network UUID from the VM\n# Set the JWT, headers and payload\njwt     = '@@{calm_jwt}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\npayload = {}\n\n# Set the address for Subnet call\nurl = \"https:\/\/localhost:9440\/api\/nutanix\/v3\/subnets\/@@{platform.status.resources.nic_list[0].subnet_reference.uuid}@@\"\n\n# Make the Subnets GET Call\nresp = urlreq(url, verb='GET', params=json.dumps(payload), headers=headers, verify=False)\n\n# If the Subnets call went through successfully\nif resp.ok:\n        subnetcidr = json.loads(resp.content)['spec']['resources']['ip_config']['prefix_length']\n        gatewayip = json.loads(resp.content)['spec']['resources']['ip_config']['default_gateway_ip']\n\n# If the Subnets call failed\nelse:\n        print(\"Subnets call failed\"), json.dumps(json.loads(resp.content), indent=4)\n        exit(1)\n\n# Convert the subnet mask from CIDR to Dotted Octets\ndef cidr_to_netmask(cidr):\n        cidr = int(cidr)\n        mask = (0xffffffff >> (32 - cidr)) << (32 - cidr)\n        return (str( (0xff000000 & mask) >> 24)   + '.' +\n                str( (0x00ff0000 & mask) >> 16)   + '.' +\n                str( (0x0000ff00 & mask) >> 8)    + '.' +\n                str( (0x000000ff & mask)))\n\nsubnetmask = cidr_to_netmask(subnetcidr)\n\n'''\nThis section creates the Edge object in the Xi IoT portal\n'''\n\nbody = {\"connected\": True,\n        \"description\": \"@@{edgedesc}@@\",\n        \"edgeDevices\": 0,\n        \"gateway\": gatewayip,\n        \"ipAddress\": \"@@{address}@@\",\n        \"name\": \"@@{edgename}@@\",\n        \"serialNumber\": \"@@{edgeserial}@@\",\n        \"subnet\": subnetmask}\n\nprint(body)\n\n# Create the URLs for this call\niotbaseURL = \"https:\/\/iot.nutanix.com\/\"\niotapiurl = \"v1.0\/edges\"\nioturl = iotbaseURL+iotapiurl\n\n# Set the Headers\niotHeaders = {\"Accept\" : \"application\/json\", \"Authorization\" : \"Bearer \" + token}\nprint \"iotHeaders={0}\".format({\"Accept\" : \"application\/json\", \"Authorization\" : \"Bearer \" + token})\n\n# Make the call\nresp = urlreq(ioturl, verb='POST', params=json.dumps(body), headers=iotHeaders, verify=False)\n\nif resp.ok:\n        response = resp.json()\n        print(response)\n\nelse:\n        print(\"Adding Edge to Xi failed\"), json.dumps(json.loads(resp.content), indent=4)\n        print(iotHeaders)\n        exit(1)","eval_variables":["iotHeaders"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Edge VM Deploy and Register"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Edge to Project","state":"ACTIVE","attrs":{"script":"# \/usr\/bin\/python3\n\n# Get the EdgeID for the Edge you just added\nedge_url = 'https:\/\/iot.nutanix.com\/v1.0\/edges'\nbody = {}\nresp = urlreq(edge_url, verb='GET', params=json.dumps(body), headers=@@{iotHeaders}@@, verify=False)\ndata = json.loads(resp.content)\n\nfor item in data['result']:\n  if item['name'] == \"@@{edgename}@@\":\n    edgeID = item['id']\n\n# Get the userID and Role for the Tenant User\nuser_url = 'https:\/\/iot.nutanix.com\/v1.0\/users'\nbody = {}\nresp = urlreq(user_url, verb='GET', params=json.dumps(body), headers=@@{iotHeaders}@@, verify=False)\ndata = json.loads(resp.content)\n\nfor item in data['result']:\n  if item['email'] == \"@@{Xi IoT Tenant.username}@@\":\n    emailUserID = item['id']\n    emailUserRole = item['role']\n\n# Get the list of Projects\nproject_url = 'https:\/\/iot.nutanix.com\/v1.0\/projects'\nbody = {}\nresp = urlreq(project_url, verb='GET', params=json.dumps(body), headers=@@{iotHeaders}@@, verify=False)\ndata = json.loads(resp.content)\n\n# Check for existing project name\nfor item in data['result']:\n  if item['name'] == \"@@{projectname}@@\":\n    print(\"Project Exists\")\n    projectID = item['id']\n    \n    # Add the edge to the existing project\n    project_url = 'https:\/\/iot.nutanix.com\/v1.0\/projects\/' +projectID\n    body = {\n        \"cloudCredentialIds\": [],\n        \"dockerProfileIds\": [],\n        \"edgeSelectorType\": \"Explicit\",\n        \"name\": \"@@{projectname}@@\",\n        \"users\": [\n            {\"role\": emailUserRole,\n            \"userId\": emailUserID}\n        ],\n        \"edgeIds\": [edgeID]\n        }\n\n    resp = urlreq(project_url, verb='PUT', params=json.dumps(body), headers=@@{iotHeaders}@@, verify=False)\n    data = json.loads(resp.content)\n\n  else:\n    print(\"'Create Project' Needed\")\n\n    # Create a project, using the admin user, adding the edge at the same time\n    project_url = 'https:\/\/iot.nutanix.com\/v1.0\/projects'\n    body = {\n        \"cloudCredentialIds\": [],\n        \"description\": \"@@{projectdesc}@@\",\n        \"dockerProfileIds\": [],\n        \"edgeSelectorType\": \"Explicit\",\n        \"name\": \"@@{projectname}@@\",\n        \"users\": [\n            {\"role\": emailUserRole,\n            \"userId\": emailUserID}\n        ],\n        \"edgeIds\": [edgeID]\n        }\n    \n    resp = urlreq(project_url, verb='POST', params=json.dumps(body), headers=@@{iotHeaders}@@, verify=False)\n    data = json.loads(resp.content)\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Edge VM Deploy and Register"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Install Epoch Docker","state":"ACTIVE","attrs":{"exit_status":[],"script":"sudo docker run -td \\\n       --name=epoch_collectors \\\n       --net=host \\\n       -v \/var\/run\/docker.sock:\/var\/run\/docker.sock:ro \\\n       -v \/proc\/:\/host\/proc\/:ro \\\n       -v \/sys\/fs\/cgroup\/:\/host\/sys\/fs\/cgroup:ro \\\n       --cap-add=NET_RAW \\\n       --cap-add=NET_ADMIN \\\n       --ulimit core=0 \\\n       -e DEPLOY_ENV=\"docker\" \\\n       -e SD_BACKEND=\"docker\" \\\n       -e EPOCH_INTERFACE=any \\\n       -e EPOCH_ANALYSIS_DEPTH=layer7 \\\n       -e EPOCH_L7_SAMPLINGRATE=20  \\\n       -e EPOCH_AOC_HOST=@@{EPOCH_AOC_HOST}@@ \\\n       -e EPOCH_ORGANIZATION_ID=@@{EPOCH_ORG_ID}@@ \\\n       gcr.io\/nutanix-epoch\/collectors:latest","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"Xi IoT User"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"2da1980d_runbook","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"198d629d_dag"},"message_list":[],"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Get Edge Serial"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"5f41b7cd_dag","state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"1830d466_runbook","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"5f41b7cd_dag"},"message_list":[],"variable_list":[]}},"variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"depends_on_list":[],"name":"31fbb160_deployment","published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Get Edge Serial"}],"substrate_local_reference":{"kind":"app_substrate","name":"Edge_VM"},"min_replicas":"1","variable_list":[],"description":""}],"description":"","action_list":[],"name":"Xi IoT","variable_list":[{"val_type":"STRING","description":"","name":"edgename","type":"LOCAL","value":"***use only lower-case and hypens - e.g. default-edge***","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"publickey","type":"LOCAL","value":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDU1WImP\/Vc0ywabzKOQTXHuVh3ndK6yFEfmQHslaEgnWOJyV0DptKo4JwVXcdhPoKQTQueBJEz\/KNbx3Qi7WnAJcERqe6pICK2\/IHQ1PcGrO\/h6mxgFEJxZeGuqjofwvTIcxPtcxdxo+x5bUGL2tpLnMNqqKTAe6R2X19uXH3jcvir2XpErx1Gw8mgidAuuBnCCd2+y87Xv10YJlpboO5LQI5ESa1yOJRlnxXpImVR9R2scK0A+uM46vgc4wKW\/adyGgwyMIXzC+jck2EPezxFuO+quTHOYDjfqaXbY1msjDbSDNqlmr94RN+wsG3qbLOtsbDHv7ycLL9ObhmYpmXp dave.hocking@C02XCC16JG5J","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"edgedesc","type":"LOCAL","value":"Description for the Edge VM","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"projectname","type":"LOCAL","value":"***What is the name of the project you want this edge to join\/create***","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"projectdesc","type":"LOCAL","value":"***Use if you're creating a new project for the edge***","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"EPOCH_ORG_ID","type":"LOCAL","value":"epoch-demo.epoch.nutanix.com","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"EPOCH_AOC_HOST","type":"LOCAL","value":"8cb44812-1cd3-45c4-847d-43f3271d126f","label":"","attrs":{"type":""},"editables":{"value":true}}]}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"Xi IoT Tenant"},"type":"USER"},"name":"GTSX2019-Xi IoT"},"api_version":"3.0","metadata":{"last_update_time":"1553705225482165","kind":"blueprint","spec_version":73,"creation_time":"1553608522068341","name":"GTSX2019-Xi IoT"}}