{"status":{},"spec":{"description":"* default password [ nutanix\/4u ]\n* Installs EPOCH\n* Installs NGT and enables VSS + SSR","resources":{"client_attrs":{"825f2580-9b9a-4066-bbec-8ce5dafffdb6":{"y":160,"x":541},"3dde34f6_deployment":{"y":124.246749164,"x":233.0783344358},"f8b8c644-eb90-4f4a-bba0-f57c74222e2e":{"y":160,"x":541},"973e8243-e4c6-4726-8ab6-23c57971af82":{"y":160,"x":541}},"service_definition_list":[{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"14c8fe8d_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"f603ab76_runbook","main_task_local_reference":{"kind":"app_task","name":"14c8fe8d_dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"6268e978_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"d738eefe_runbook","main_task_local_reference":{"kind":"app_task","name":"6268e978_dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"11f7e9b6_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"7748f46a_runbook","main_task_local_reference":{"kind":"app_task","name":"11f7e9b6_dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"52def80e_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"534c563f_runbook","main_task_local_reference":{"kind":"app_task","name":"52def80e_dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"1b587922_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"e9d7de80_runbook","main_task_local_reference":{"kind":"app_task","name":"1b587922_dag"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[],"name":"Linux","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","description":"","name":"PE_VIP","type":"LOCAL","value":"","label":"","attrs":{"type":""}}],"description":""}],"substrate_definition_list":[{"description":"","action_list":[],"type":"AHV_VM","name":"MasterUbuntu","readiness_probe":{"connection_type":"SSH","retries":"5","disable_readiness_probe":false,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"0","connection_port":22,"login_credential_local_reference":{"kind":"app_credential","name":"ubuntu"}},"editables":{"readiness_probe":{"connection_type":true,"connection_port":true,"timeout_secs":true},"create_spec":{"resources":{"nic_list":{},"serial_port_list":{},"num_vcpus_per_socket":true,"num_sockets":true,"memory_size_mib":true,"guest_customization":true,"disk_list":{}}}},"os_type":"Linux","create_spec":{"name":"ubuntu-@@{calm_array_index}@@-@@{calm_time}@@","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"dff93912-3151-45db-a938-8107d24a3e3e"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":2,"num_sockets":2,"gpu_list":[],"memory_size_mib":8192,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\n#hostname\nhostname: @@{name}@@\nssh_pwauth: True\npassword: nutanix\/4u\n\nusers:\n  - name: ubuntu\n    ssh-authorized-keys:\n      - @@{INSTANCE_PUBLIC_KEY}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"},"type":"","sysprep":null},"power_state":"ON","type":"","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"app_package","type":"","name":"CENTOS_IMAGE","uuid":"066b4671-53a4-492d-a4b5-ead81acff50d"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":51200,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":1,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"categories":""},"variable_list":[]}],"credential_definition_list":[{"username":"ubuntu","description":"","type":"KEY","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"ubuntu","editables":{"username":true,"secret":true}}],"package_definition_list":[{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"Linux"}],"name":"AHVLinux","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHVLinux"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[{"kind":"app_task","name":"Install System Packages"},{"kind":"app_task","name":"Install Epoch Ubuntu"},{"kind":"app_task","name":"Get PE IP"},{"kind":"app_task","name":"PowerOff"},{"kind":"app_task","name":"Add Empty CDROM"},{"kind":"app_task","name":"PowerOn"},{"kind":"app_task","name":"Mount NGT"},{"kind":"app_task","name":"Install NGT"},{"kind":"app_task","name":"Unmount NGT"},{"kind":"app_task","name":"Enable VSS_SSR"}],"name":"d80995e3_dag","state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Install System Packages"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Install Epoch Ubuntu"}},{"from_task_reference":{"kind":"app_task","name":"Install Epoch Ubuntu"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Get PE IP"}},{"from_task_reference":{"kind":"app_task","name":"Mount NGT"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Install NGT"}},{"from_task_reference":{"kind":"app_task","name":"Install NGT"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Unmount NGT"}},{"from_task_reference":{"kind":"app_task","name":"Get PE IP"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"PowerOff"}},{"from_task_reference":{"kind":"app_task","name":"PowerOff"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Add Empty CDROM"}},{"from_task_reference":{"kind":"app_task","name":"Add Empty CDROM"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"PowerOn"}},{"from_task_reference":{"kind":"app_task","name":"PowerOn"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Mount NGT"}},{"from_task_reference":{"kind":"app_task","name":"Unmount NGT"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Enable VSS_SSR"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Install System Packages","state":"ACTIVE","attrs":{"exit_status":[],"script":"#!\/bin\/bash\n\n# -*- Install Mysql\nsudo yum update -y --quiet\nsudo yum install -y  htop wget iotop xfs* bc unzip lvm2*\n\nsudo sed -i 's\/^SELINUX=.*\/SELINUX=disabled\/' \/etc\/sysconfig\/selinux\nsudo sed -i 's\/^SELINUX=.*\/SELINUX=disabled\/' \/etc\/selinux\/config\nsudo setenforce 0\n\necho \"System packages are installed\"","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"ubuntu"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Install Epoch Ubuntu","state":"ACTIVE","attrs":{"exit_status":[],"script":"  # Download the collectors with the command\n  sudo wget -q -O \\\n      epoch-collectors.deb \\\n      https:\/\/repo.epoch.nutanix.com\/stable\/epoch-collectors-ubuntu-16.04-x64.deb\n\n  # Install the collectors\n  sudo dpkg -i --force-overwrite epoch-collectors.deb\n\n  # Configure the collectors.\n  EPOCH_AOC_HOST=epoch-demo.epoch.nutanix.com EPOCH_ORGANIZATION_ID=8cb44812-1cd3-45c4-847d-43f3271d126f EPOCH_INTERFACE=any EPOCH_ANALYSIS_DEPTH=layer7 EPOCH_L7_SAMPLINGRATE=20  EPOCH_AUTOUPGRADE_COLLECTORS=no sudo \/opt\/nutanix\/epoch\/collectors\/configure.sh\n\n  # Start the collectors\n  sudo \/etc\/init.d\/epoch-collectors start","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"ubuntu"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Get PE IP","state":"ACTIVE","attrs":{"exit_status":[],"script":"## Get Subnet UUID, use that to get Cluster UUID, then get VIP\n# Set the JWT, headers and payload\njwt     = '@@{calm_jwt}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\npayload = {}\n\n# Set the address for Subnet call\nurl = \"https:\/\/localhost:9440\/api\/nutanix\/v3\/subnets\/@@{platform.status.resources.nic_list[0].subnet_reference.uuid}@@\"\n\n# Make the Subnets GET Call\nresp = urlreq(url, verb='GET', params=json.dumps(payload), headers=headers, verify=False)\n\n# If the Subnets call went through successfully\nif resp.ok:\n  cluster_uuid = json.loads(resp.content)['spec']['cluster_reference']['uuid']\n\n# If the Subnets call failed\nelse:\n  print \"Subnets call failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)\n\n# Set the address for Clusters call\nurl = \"https:\/\/localhost:9440\/api\/nutanix\/v3\/clusters\/{0}\".format(cluster_uuid)\n\n# Make the Clusters GET Call\nresp = urlreq(url, verb='GET', params=json.dumps(payload), headers=headers, verify=False)\n\n# If the Clusters call went through successfully\nif resp.ok:\n  print \"PE_VIP={0}\".format(json.loads(resp.content)['spec']['resources']['network']['external_ip'])\n\n# If the Subnets call failed\nelse:\n  print \"Clusters call failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)\n\nexit(0)","eval_variables":["PE_VIP"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"PowerOff","state":"ACTIVE","attrs":{"script":"# Set the user, headers and payload\npe_user = '@@{PE_ADMIN_USER}@@'\npe_pass = '@@{PE_ADMIN_PWD}@@'\n\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\npayload = {\"transition\": \"OFF\"}\n\nurl = \"https:\/\/@@{PE_VIP}@@:9440\/PrismGateway\/services\/rest\/v2.0\/vms\/@@{id}@@\/set_power_state\"\n\n# Make the request\nresp = urlreq(url, verb='POST', auth='BASIC', user=pe_user, passwd=pe_pass, params=json.dumps(payload), headers=headers, verify=False)\n\n# If the request went through correctly, print it out.  Otherwise error out, and print the response.\nif resp.ok:\n    print json.dumps(json.loads(resp.content))\n    exit(0)\nelse:\n    print \"Post request failed\", resp.content\n    exit(1)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Add Empty CDROM","state":"ACTIVE","attrs":{"script":"# Set the user, headers and payload\npe_user = '@@{PE_ADMIN_USER}@@'\npe_pass = '@@{PE_ADMIN_PWD}@@'\n\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\npayload = {\"vm_disks\":[{\"is_cdrom\": True,\"is_empty\": True,\"disk_address\":{\"device_bus\":\"ide\",\"device_index\":2}}]}\n\nurl = \"https:\/\/@@{PE_VIP}@@:9440\/PrismGateway\/services\/rest\/v2.0\/vms\/@@{id}@@\/disks\/attach\"\n\n# Sleep - Waiting for power-off\nsleep(30)\n\n# Make the request\nresp = urlreq(url, verb='POST', auth='BASIC', user=pe_user, passwd=pe_pass, params=json.dumps(payload), headers=headers, verify=False)\n\n# If the request went through correctly, print it out.  Otherwise error out, and print the response.\nif resp.ok:\n   print json.dumps(json.loads(resp.content))\n   exit(0)\nelse:\n   print \"Post request failed\", resp.content\n   exit(1)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"PowerOn","state":"ACTIVE","attrs":{"script":"# Set the user, headers and payload\npe_user = '@@{PE_ADMIN_USER}@@'\npe_pass = '@@{PE_ADMIN_PWD}@@'\n\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\npayload = {\"transition\": \"ON\"}\n\nurl = \"https:\/\/@@{PE_VIP}@@:9440\/PrismGateway\/services\/rest\/v2.0\/vms\/@@{id}@@\/set_power_state\"\n\n# Make the request\nresp = urlreq(url, verb='POST', auth='BASIC', user=pe_user, passwd=pe_pass, params=json.dumps(payload), headers=headers, verify=False)\n\n# If the request went through correctly, print it out.  Otherwise error out, and print the response.\nif resp.ok:\n    print json.dumps(json.loads(resp.content))\n    sleep(30)\n    exit(0)\nelse:\n    print \"Post request failed\", resp.content\n    exit(1)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Mount NGT","state":"ACTIVE","attrs":{"script":"# Set the user, headers and payload\npe_user = '@@{PE_ADMIN_USER}@@'\npe_pass = '@@{PE_ADMIN_PWD}@@'\n\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\npayload = {}\n\nurl = \"https:\/\/@@{PE_VIP}@@:9440\/PrismGateway\/services\/rest\/v1\/vms\/@@{id}@@\/guest_tools\/mount\"\n\n# Make the request\nresp = urlreq(url, verb='POST', auth='BASIC', user=pe_user, passwd=pe_pass, params=json.dumps(payload), headers=headers, verify=False)\n\n# If the request went through correctly, print it out.  Otherwise error out, and print the response.\nif resp.ok:\n   print json.dumps(json.loads(resp.content))\n   sleep(60)\n   exit(0)\nelse:\n   print \"Post request failed\", resp.content\n\n   exit(1)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Install NGT","state":"ACTIVE","attrs":{"script":"# Mount NGT\nsudo mount \/dev\/sr0 \/mnt\n\n# Install NGT\nsudo \/mnt\/installer\/linux\/install_ngt.py\n\n# Sleep to allow some time before starting agents\nsleep 30\n\n# Start ngt_guest_agent & ssr agent\nsudo \/etc\/init.d\/ngt_guest_agent start\nsleep 5\nsudo \/etc\/init.d\/ngt_self_service_restore start\nsleep 5","type":"","command_line_args":"","exit_status":[],"script_type":"sh"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Unmount NGT","state":"ACTIVE","attrs":{"script":"# Set the user, headers and payload\npe_user = '@@{PE_ADMIN_USER}@@'\npe_pass = '@@{PE_ADMIN_PWD}@@'\n\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\npayload = {}\n\nurl = \"https:\/\/@@{PE_VIP}@@:9440\/PrismGateway\/services\/rest\/v1\/vms\/@@{id}@@\/guest_tools\/unmount\"\n\n# Make the request\nresp = urlreq(url, verb='POST', auth='BASIC', user=pe_user, passwd=pe_pass, params=json.dumps(payload), headers=headers, verify=False)\n\n# If the request went through correctly, print it out.  Otherwise error out, and print the response.\nif resp.ok:\n    print json.dumps(json.loads(resp.content))\n    exit(0)\nelse:\n    print \"Post request failed\", resp.content\n    exit(1)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Linux"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Enable VSS_SSR","state":"ACTIVE","attrs":{"script":"# Set the user, headers and payload\npe_user = '@@{PE_ADMIN_USER}@@'\npe_pass = '@@{PE_ADMIN_PWD}@@'\n\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\npayload = {\"vmUuid\":\"@@{id}@@\",\"enabled\": True,\"applications\":{\"file_level_restore\": True,\"vss_snapshot\": True}}\n\nurl = \"https:\/\/@@{PE_VIP}@@:9440\/PrismGateway\/services\/rest\/v1\/vms\/@@{id}@@\/guest_tools\/\"\n\n# Make the request\nresp = urlreq(url, verb='POST', auth='BASIC', user=pe_user, passwd=pe_pass, params=json.dumps(payload), headers=headers, verify=False)\n\n# If the request went through correctly, print it out.  Otherwise error out, and print the response.\nif resp.ok:\n   print json.dumps(json.loads(resp.content))\n   exit(0)\nelse:\n   print \"Post request failed\", resp.content\n\n   exit(1)\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"ecae87f8_runbook","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"d80995e3_dag"},"message_list":[],"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"AHVLinux"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"254e5361_dag","state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"2ac89dfe_runbook","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"254e5361_dag"},"message_list":[],"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"SUBSTRATE_IMAGE","service_local_reference_list":[],"name":"Ubuntu_IMAGE","version":"","options":{"type":"","name":"Ubuntu-18.10","resources":{"image_type":"DISK_IMAGE","checksum":{"checksum_algorithm":"","type":"","checksum_value":""},"source_uri":"https:\/\/cloud-images.ubuntu.com\/minimal\/releases\/cosmic\/release-20190318\/ubuntu-18.10-minimal-cloudimg-amd64.img","version":{"product_version":"18.10","type":"","product_name":"Ubuntu"},"architecture":"X86_64","type":""},"description":""},"variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"depends_on_list":[],"name":"3dde34f6_deployment","published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"AHVLinux"}],"substrate_local_reference":{"kind":"app_substrate","name":"MasterUbuntu"},"min_replicas":"1","variable_list":[],"description":""}],"description":"","action_list":[],"name":"Nutanix","variable_list":[{"val_type":"STRING","description":"","name":"INSTANCE_PUBLIC_KEY","type":"LOCAL","value":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDYYeOIWjPq+Thep1JkZb6Cv8MH2VAuBwGcLwi54D7OM7M\/amxJ0DnpcFkSC4TN9k1yeLmuheV+mTNEZQneQXGe\/2CWijtDwuOoAbDmnrHCewuvDN\/pis7UdDBdpk8apTx7PtUGeWflDdUgAQirc2jfBHtrQ3xmy4kBBDMEXOU5ml7Q\/l9ReWj7qju9QWuukEjxTpGratZQO30CBFkib1DJr9+c1VVwmiOIn4hKle\/6SQ7WKaZbP4LGVb2uASgW9LuOmT6t1cg9yhI4SQe5Hi8A2cSUyYbiiwU64C0ejNymliO7hMK3dUBEXbrWWrpz75DuUKDPg\/MejSLsjeROwYg3 jake.tame@C02WM2A8HV2R","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"EPOCH_HOST","type":"LOCAL","value":"epoch-demo.epoch.nutanix.com","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"EPOCH_ORG_ID","type":"LOCAL","value":"8cb44812-1cd3-45c4-847d-43f3271d126f","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"PE_ADMIN_USER","type":"LOCAL","value":"admin","label":"","attrs":{"type":""},"editables":{"value":true}},{"val_type":"STRING","description":"","name":"PE_ADMIN_PWD","type":"SECRET","value":"","label":"","attrs":{"is_secret_modified":false,"secret_reference":{},"type":""},"editables":{"value":true}}]}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"ubuntu"},"type":"USER"},"name":"GTSX2019-Ubuntu-Base"},"api_version":"3.0","metadata":{"last_update_time":"1553713204598883","kind":"blueprint","spec_version":14,"creation_time":"1553698314831533","categories":{"AppFamily":"Databases"},"name":"GTSX2019-Ubuntu-Base"}}